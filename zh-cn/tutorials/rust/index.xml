<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Rust 教程 on 梦兽编程</title><link>https://rexai.top/zh-cn/tutorials/rust/</link><description>Recent content in Rust 教程 on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>zh-cn</language><copyright>梦兽编程</copyright><lastBuildDate>Thu, 24 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rexai.top/zh-cn/tutorials/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>5个常见的Rust生命周期错误及其修复方案</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-lifetime-mistakes/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-lifetime-mistakes/</guid><description>还在死磕 Rust 生命周期？本文用幽默易懂的方式，带你彻底搞懂 &amp;#39;a 的真正含义，避开新手最常踩的5个天坑，让你轻松掌握 Rust 的借用和所有权，悄悄卷赢所有同事。</description></item><item><title>Rust内卷终极指南：5个让同事高攀不起的Trait与泛型骚操作</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-traits-and-generics-common-mistakes/</link><pubDate>Mon, 27 Jan 2025 10:00:00 +0800</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-traits-and-generics-common-mistakes/</guid><description>深入解析Rust中Traits和Generics的5个常见陷阱，从泛型滥用、Trait约束混乱、静态动态分发混淆、关联类型使用到结构体约束滥用，帮你写出更优雅高效的Rust代码</description></item><item><title>Rust错误处理指南：精通Result、Option与unwrap/expect</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-error-handling-guide-unwrap-result-option/</link><pubDate>Thu, 19 Dec 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-error-handling-guide-unwrap-result-option/</guid><description>深度解析 Rust 错误处理机制，从 unwrap 的陷阱到 ? 操作符的优雅，详细讲解 Result、Option、panic 处理等核心概念，包含实战代码示例和最佳实践，助你写出更安全可靠的 Rust 代码</description></item><item><title>Rust异步编程：7个导致性能瓶颈和崩溃的常见错误</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-async-common-mistakes-to-avoid/</link><pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-async-common-mistakes-to-avoid/</guid><description>深入探讨7个常见的Rust异步编程陷阱，如阻塞线程、错误使用锁和未处理的Future。通过实例学习如何避免这些错误，编写高性能、稳定的异步代码。</description></item><item><title>Rust借用检查器详解：所有权、借用与生命周期入门指南</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-borrow-checker-explained-zh/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-borrow-checker-explained-zh/</guid><description>深入浅出理解Rust核心概念——借用检查器（Borrow Checker）。本文用生动的比喻，解释所有权、借用、生命周期，让你不再畏惧编译错误，真正掌握Rust的安全之道。</description></item><item><title>Rust智能指针详解：Box、Rc与RefCell的实用指南</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-smart-pointers-explained-fun-way/</link><pubDate>Mon, 15 Jan 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-smart-pointers-explained-fun-way/</guid><description>通过生动的比喻和实例，深入浅出地讲解Rust智能指针Box、Rc、RefCell的使用场景和区别，让你轻松掌握Rust内存管理精髓</description></item><item><title>Rust并发编程指南：精通Arc、Mutex与Channel，实现线程安全</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-concurrency-made-easy-with-arc-mutex-channel/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-concurrency-made-easy-with-arc-mutex-channel/</guid><description>深入理解Rust并发编程的核心概念：Arc原子引用计数、Mutex互斥锁、Channel通道通信。通过生动的比喻和实际代码示例，掌握线程安全的并发编程技巧。</description></item></channel></rss>