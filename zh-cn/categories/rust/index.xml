<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Rust on 梦兽编程</title><link>https://rexai.top/zh-cn/categories/rust/</link><description>Recent content in Rust on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>zh-cn</language><copyright>梦兽编程</copyright><lastBuildDate>Mon, 27 Jan 2025 10:00:00 +0800</lastBuildDate><atom:link href="https://rexai.top/zh-cn/categories/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust内卷终极指南：5个让同事高攀不起的Trait与泛型骚操作</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-traits-and-generics-common-mistakes/</link><pubDate>Mon, 27 Jan 2025 10:00:00 +0800</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-traits-and-generics-common-mistakes/</guid><description>深入解析Rust中Traits和Generics的5个常见陷阱，从泛型滥用、Trait约束混乱、静态动态分发混淆、关联类型使用到结构体约束滥用，帮你写出更优雅高效的Rust代码</description></item><item><title>Rust智能指针完全指南：Box、Rc、RefCell三大神器让你秒懂内存管理</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-smart-pointers-explained-fun-way/</link><pubDate>Mon, 15 Jan 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-smart-pointers-explained-fun-way/</guid><description>通过生动的比喻和实例，深入浅出地讲解Rust智能指针Box、Rc、RefCell的使用场景和区别，让你轻松掌握Rust内存管理精髓</description></item><item><title>征服Rust并发：Arc、Mutex、Channel三大护法，让你的代码从此刀枪不入！</title><link>https://rexai.top/zh-cn/tutorials/rust/rust-concurrency-made-easy-with-arc-mutex-channel/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/zh-cn/tutorials/rust/rust-concurrency-made-easy-with-arc-mutex-channel/</guid><description>深入理解Rust并发编程的核心概念：Arc原子引用计数、Mutex互斥锁、Channel通道通信。通过生动的比喻和实际代码示例，掌握线程安全的并发编程技巧。</description></item></channel></rss>