<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>最佳实践 on 梦兽编程</title><link>https://rexai.top/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><description>Recent content in 最佳实践 on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>zh-cn</language><copyright>梦兽编程</copyright><lastBuildDate>Wed, 13 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rexai.top/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust 的 unsafe 不是“随便玩玩”，而是生死状：6 个让你代码原地爆炸的骚操作</title><link>https://rexai.top/tutorials/rust/rust-unsafe-yolo-sao-cao-zuo/</link><pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/tutorials/rust/rust-unsafe-yolo-sao-cao-zuo/</guid><description>别把 unsafe 当成免死金牌！本文以实战示例拆解 6 个最常见的 unsafe 误用场景：把它当胶带封编译器嘴、乱解引用裸指针、在 unsafe 里违反借用检查、重复造轮子、滥用 unsafe impl 以及缺少 Safety 注释，让你建立正确的风险意识与使用范式。</description></item><item><title>Rust内卷终极指南：5个让同事高攀不起的Trait与泛型骚操作</title><link>https://rexai.top/tutorials/rust/rust-traits-and-generics-common-mistakes/</link><pubDate>Mon, 27 Jan 2025 10:00:00 +0800</pubDate><guid>https://rexai.top/tutorials/rust/rust-traits-and-generics-common-mistakes/</guid><description>深入解析Rust中Traits和Generics的5个常见陷阱，从泛型滥用、Trait约束混乱、静态动态分发混淆、关联类型使用到结构体约束滥用，帮你写出更优雅高效的Rust代码</description></item></channel></rss>