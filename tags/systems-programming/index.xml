<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Systems Programming on 梦兽编程</title><link>https://rexai.top/tags/systems-programming/</link><description>Recent content in Systems Programming on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>en</language><copyright>梦兽编程</copyright><lastBuildDate>Fri, 26 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://rexai.top/tags/systems-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Borrow Checker Explained: A Beginner's Guide to Ownership, Borrowing, and Lifetimes</title><link>https://rexai.top/tutorials/rust/rust-borrow-checker-explained-en/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/tutorials/rust/rust-borrow-checker-explained-en/</guid><description>A deep but simple dive into Rust&amp;#39;s core concept: the Borrow Checker. Using a vivid analogy, this article explains ownership, borrowing, and lifetimes, helping you conquer compile errors and master Rust&amp;#39;s safety.</description></item><item><title>Rust Smart Pointers Explained: A Practical Guide to Box, Rc, and RefCell</title><link>https://rexai.top/tutorials/rust/rust-smart-pointers-explained-fun-way/</link><pubDate>Mon, 15 Jan 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/tutorials/rust/rust-smart-pointers-explained-fun-way/</guid><description>Learn Rust smart pointers through vivid analogies and practical examples. Master Box, Rc, and RefCell to understand Rust&amp;#39;s memory management system effortlessly</description></item></channel></rss>