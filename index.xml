<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>梦兽编程</title><link>https://rexai.top/</link><description>Recent content on 梦兽编程</description><generator>Hugo -- 0.148.1</generator><language>en</language><copyright>梦兽编程</copyright><lastBuildDate>Thu, 24 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rexai.top/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Lifetimes Explained: From 'a Errors to Mastery, Finally Understand the Borrow Checker</title><link>https://rexai.top/tutorials/rust/rust-lifetime-mistakes/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/tutorials/rust/rust-lifetime-mistakes/</guid><description>Still struggling with Rust lifetimes? This article uses a humorous and easy-to-understand approach to help you finally grasp the true meaning of &amp;#39;a, avoid the 5 most common pitfalls for beginners, and master Rust&amp;#39;s borrowing and ownership to get ahead of your peers.</description></item><item><title>Alibaba's Qwen3-235B-A22B with 256K Context Goes Live: A New Benchmark in AI</title><link>https://rexai.top/tools/development/qwen3-235b-a22b-256k-context-launch/</link><pubDate>Tue, 22 Jul 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/tools/development/qwen3-235b-a22b-256k-context-launch/</guid><description>Alibaba releases the Qwen3-235B-A22B model, supporting a 256K large context and outperforming mainstream AI models like K2, DeepSeek, and Claude, marking a new breakthrough in the AI field.</description></item><item><title>Daily AI Painting Tip: 3D Gradient Icon Style (GPT-4o &amp; Lovart in Practice)</title><link>https://rexai.top/tools/ai-tools/2025-05/</link><pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/tools/ai-tools/2025-05/</guid><description>This issue of the AI Painting column details how to generate high-quality 3D gradient icons using GPT-4o and Lovart, with detailed prompts and practical tips, suitable for daily advancement of AI artists and UI designers.</description></item><item><title>Interviewer: How do you test your code? Complete JavaScript Testing &amp; Debugging Guide</title><link>https://rexai.top/js-news/javascript-testing-debugging-guide-for-interview/</link><pubDate>Mon, 27 Jan 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/js-news/javascript-testing-debugging-guide-for-interview/</guid><description>Master JavaScript testing and debugging techniques, from unit testing to E2E testing, from console.log to breakpoint debugging, become a professional developer that impresses interviewers</description></item><item><title>Is React Doomed? Silicon Valley CTOs Are Secretly Jumping Ship...</title><link>https://rexai.top/js-news/react-cto-secret-shift/</link><pubDate>Thu, 19 Dec 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/js-news/react-cto-secret-shift/</guid><description>Revealing why CTOs from 24 top tech companies are abandoning React: an in-depth analysis of five key truths including performance bottlenecks, development efficiency, and talent costs.</description></item><item><title>The Ultimate Guide to Rust Error Handling: Say Goodbye to unwrap() and Master Result and Option</title><link>https://rexai.top/tutorials/rust/rust-error-handling-guide-unwrap-result-option/</link><pubDate>Thu, 19 Dec 2024 10:00:00 +0800</pubDate><guid>https://rexai.top/tutorials/rust/rust-error-handling-guide-unwrap-result-option/</guid><description>A deep dive into Rust&amp;#39;s error handling mechanism, from the pitfalls of unwrap to the elegance of the ? operator. This guide covers core concepts like Result, Option, and panic handling with practical code examples and best practices to help you write safer, more reliable Rust code.</description></item><item><title>Rust's Infamous Borrow Checker: Not Your Boss, But Your Best Bodyguard</title><link>https://rexai.top/tutorials/rust/rust-borrow-checker-explained-en/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/tutorials/rust/rust-borrow-checker-explained-en/</guid><description>A deep but simple dive into Rust&amp;#39;s core concept: the Borrow Checker. Using a vivid analogy, this article explains ownership, borrowing, and lifetimes, helping you conquer compile errors and master Rust&amp;#39;s safety.</description></item><item><title>Bun vs Rust Performance Showdown: The Newcomer vs The Veteran</title><link>https://rexai.top/js-news/bun-vs-rust-performance-battle/</link><pubDate>Mon, 22 Jul 2024 13:37:00 +0800</pubDate><guid>https://rexai.top/js-news/bun-vs-rust-performance-battle/</guid><description>Which is faster, Bun or Rust? This article uses a real-world URL shortener service benchmark to compare Bun (Elysia) and Rust (Actix) in throughput, latency, and developer experience, helping you choose the right tech stack.</description></item></channel></rss>