<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>梦兽编程</title><link>https://rexai.top/en/</link><description>Recent content on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>en</language><copyright>梦兽编程</copyright><lastBuildDate>Tue, 19 Aug 2025 23:35:58 +0800</lastBuildDate><atom:link href="https://rexai.top/en/index.xml" rel="self" type="application/rss+xml"/><item><title>The Middleware Optimization Trick That Made My Node.js Server 40% Faster</title><link>https://rexai.top/en/js-news/nodejs-middleware-optimization-performance-boost/</link><pubDate>Tue, 19 Aug 2025 23:35:58 +0800</pubDate><guid>https://rexai.top/en/js-news/nodejs-middleware-optimization-performance-boost/</guid><description>Learn this middleware design pattern to dramatically boost Node.js performance, reduce latency, and improve scalability without rewriting your code</description></item><item><title>3 Steps, Zero Cost: 2000 tokens/s Coding Backend for Claude Code (Cerebras × Cloudflare)</title><link>https://rexai.top/en/tools/ai-tools/supercharge-claude-code-free-cerebras-cloudflare/</link><pubDate>Mon, 18 Aug 2025 00:00:00 +0800</pubDate><guid>https://rexai.top/en/tools/ai-tools/supercharge-claude-code-free-cerebras-cloudflare/</guid><description>Deploy an OpenAI-compatible gateway with Cloudflare Workers + run.claw.cloud + free Cerebras credits. Connect Claude Code to a blazing-fast backend at near-zero cost, with setup commands, gateway config, and troubleshooting tips.</description></item><item><title>Rust + Axum Async Microservice Guide: Job Queue, Retries, and Graceful Shutdown</title><link>https://rexai.top/en/tutorials/rust/rust-axum-async-microservice-guide/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-axum-async-microservice-guide/</guid><description>Build a production-ready async microservice with Rust and Axum: job queue, background workers, exponential backoff retries, and graceful shutdown. Includes full project structure and Docker example.</description></item><item><title>Rust Axum Graceful Shutdown, The Ultimate Guide: Fix the pitfall 99% of engineers hit</title><link>https://rexai.top/en/tutorials/rust/rust-axum-graceful-shutdown-guide/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-axum-graceful-shutdown-guide/</guid><description>Master graceful shutdown for Rust Axum services: listen for SIGINT/SIGTERM, refuse new connections with with_graceful_shutdown, stop background tasks via CancellationToken, set timeouts, and integrate with Docker/Kubernetes termination — protect data integrity and user experience.</description></item><item><title>Customize Your AI Coder: A Deep Dive into Claude Code Output Styles</title><link>https://rexai.top/en/tools/ai-tools/output-styles-custom-ai-persona/</link><pubDate>Sat, 16 Aug 2025 12:00:00 +0800</pubDate><guid>https://rexai.top/en/tools/ai-tools/output-styles-custom-ai-persona/</guid><description>Learn to use Claude Code&amp;#39;s new Output Styles feature to transform your AI assistant. This guide covers everything from using preset personas like &amp;#39;Explanatory&amp;#39; and &amp;#39;Learning&amp;#39; to creating your own custom AI styles for tasks like code auditing, TDD, and more.</description></item><item><title>Claude Code Tamagotchi: Your VSCode Coding Pet and AI Buddy</title><link>https://rexai.top/en/tools/ai-tools/claude-code-tamagotchi-your-ai-coding-buddy/</link><pubDate>Fri, 15 Aug 2025 10:00:00 +0800</pubDate><guid>https://rexai.top/en/tools/ai-tools/claude-code-tamagotchi-your-ai-coding-buddy/</guid><description>Turn coding into a nurturing game: Claude Code Tamagotchi lives in your VSCode status bar, reacts to your real coding activity, and offers gentle reminders and companionship. Includes a 3‑minute setup (npm/bun), local save, and CLI interactions.</description></item><item><title>Rust + Axum, from zero to hero: build a high‑performance Web server the LEGO way</title><link>https://rexai.top/en/tutorials/rust/axum-from-zero-to-hero-tutorial/</link><pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/axum-from-zero-to-hero-tutorial/</guid><description>A step‑by‑step Axum guide to build a modern high‑performance Web service: routing, path and query parameters, JSON, shared state, and middleware (tracing, CORS) with complete code samples and best practices.</description></item><item><title>Rust unsafe isn’t a toy — it’s a blood oath: 6 YOLO mistakes that will blow up your code</title><link>https://rexai.top/en/tutorials/rust/rust-unsafe-yolo-sao-cao-zuo/</link><pubDate>Wed, 13 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-unsafe-yolo-sao-cao-zuo/</guid><description>Don’t treat unsafe like a get-out-of-jail-free card. With practical examples, this article dissects 6 common unsafe pitfalls: silencing the compiler with duct tape, dereferencing random raw pointers, violating borrow rules inside unsafe, reinventing wheels, abusing unsafe impl, and skipping Safety comments — helping you build the right risk mindset and usage patterns.</description></item><item><title>2025 Indie Dev Frugal Stack: Money-Saving AI Coding + Zero-Cost Web Deploy (DeepSeek R1 0528, Gemini 2.5, Qwen3)</title><link>https://rexai.top/en/tools/ai-tools/ai-programming-web-deploy-free-guide-2025/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0800</pubDate><guid>https://rexai.top/en/tools/ai-tools/ai-programming-web-deploy-free-guide-2025/</guid><description>2025 trends: DeepSeek R1 0528, Gemini 2.5, Qwen3 free/low-cost AI coding combos + zero-cost web deployment with Vercel/Cloudflare Pages/Workers — a practical playbook for indie developers.</description></item><item><title>Stop treating tokio::spawn as a thread! I launched 1000 tasks in 2 seconds and the system stayed calm</title><link>https://rexai.top/en/tutorials/rust/tokio-spawn-is-not-a-thread/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/tokio-spawn-is-not-a-thread/</guid><description>tokio::spawn is not a thread but a lightweight task. Under Tokio&amp;#39;s scheduler you build highly concurrent services with sleep, timeout and select — 1000 tasks in 2 seconds with negligible overhead.</description></item><item><title>Rust Async State Machine, Unmasked: How Future, poll, and Waker Really Work</title><link>https://rexai.top/en/tutorials/rust/how-rust-async-state-machine-works-under-the-hood/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/how-rust-async-state-machine-works-under-the-hood/</guid><description>A practical deep dive into Rust async: why calling an async function doesn&amp;#39;t run it, how the compiler turns async into a state machine, and how executors drive tasks forward with poll and Waker. Understand the real mechanics behind async/await.</description></item><item><title>Stop Using substr(): The Deprecated JavaScript API and the Right Replacements (slice vs substring)</title><link>https://rexai.top/en/js-news/javascript-substr-deprecated-pitfall-english/</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/js-news/javascript-substr-deprecated-pitfall-english/</guid><description>substr() is deprecated and risky to rely on. This guide explains why, contrasts it with slice() and substring(), and provides a clear migration checklist and best practices.</description></item><item><title>Rust 1.89: Intel Macs demoted to Tier 2, clearer lifetimes, and new x86 intrinsics</title><link>https://rexai.top/en/tutorials/rust/rust-1-89-intel-mac-demotion-20250809/</link><pubDate>Sat, 09 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-1-89-intel-mac-demotion-20250809/</guid><description>Rust 1.89 demotes x86_64-apple-darwin (Intel Mac) from Tier 1 to Tier 2, adds the mismatched_lifetime_syntaxes lint, constant generics &amp;#39;_&amp;#39; inference, and a wave of new x86 intrinsics.</description></item><item><title>HTML Speculation Rules API Tutorial: 6 Lines of Code for Instant Page Loads</title><link>https://rexai.top/en/js-news/html-speculation-rules-instant-page-load-english/</link><pubDate>Fri, 01 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/js-news/html-speculation-rules-instant-page-load-english/</guid><description>Complete guide to HTML5 Speculation Rules API for prefetching and prerendering web pages. Achieve 90% faster page loads with 6 lines of HTML code. Includes Chrome 121+ implementation and cross-browser compatibility solutions.</description></item><item><title>Rust Async Unveiled: The Secret to Making Code 'Slack Off' While Doubling Efficiency!</title><link>https://rexai.top/en/tutorials/rust/rust-async-like-a-pro-explained/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-async-like-a-pro-explained/</guid><description>Deep dive into Rust async programming core concepts, from async/await to Future, from tokio runtime to concurrent processing. Master zero-cost async programming essence and double your Rust code efficiency!</description></item></channel></rss>