<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Tutorial on 梦兽编程</title><link>https://rexai.top/en/categories/tutorial/</link><description>Recent content in Tutorial on 梦兽编程</description><generator>Hugo -- 0.148.2</generator><language>en</language><copyright>梦兽编程</copyright><lastBuildDate>Sun, 17 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://rexai.top/en/categories/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust Axum Graceful Shutdown, The Ultimate Guide: Fix the pitfall 99% of engineers hit</title><link>https://rexai.top/en/tutorials/rust/rust-axum-graceful-shutdown-guide/</link><pubDate>Sun, 17 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/rust-axum-graceful-shutdown-guide/</guid><description>Master graceful shutdown for Rust Axum services: listen for SIGINT/SIGTERM, refuse new connections with with_graceful_shutdown, stop background tasks via CancellationToken, set timeouts, and integrate with Docker/Kubernetes termination — protect data integrity and user experience.</description></item><item><title>Rust + Axum, from zero to hero: build a high‑performance Web server the LEGO way</title><link>https://rexai.top/en/tutorials/rust/axum-from-zero-to-hero-tutorial/</link><pubDate>Thu, 14 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/axum-from-zero-to-hero-tutorial/</guid><description>A step‑by‑step Axum guide to build a modern high‑performance Web service: routing, path and query parameters, JSON, shared state, and middleware (tracing, CORS) with complete code samples and best practices.</description></item><item><title>Stop treating tokio::spawn as a thread! I launched 1000 tasks in 2 seconds and the system stayed calm</title><link>https://rexai.top/en/tutorials/rust/tokio-spawn-is-not-a-thread/</link><pubDate>Mon, 11 Aug 2025 00:00:00 +0000</pubDate><guid>https://rexai.top/en/tutorials/rust/tokio-spawn-is-not-a-thread/</guid><description>tokio::spawn is not a thread but a lightweight task. Under Tokio&amp;#39;s scheduler you build highly concurrent services with sleep, timeout and select — 1000 tasks in 2 seconds with negligible overhead.</description></item></channel></rss>